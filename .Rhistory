}else{
next(j)
}
}
}
b
a
a <- c(paste(rep(colour, 4), "room", sep = " "), "brown room")
a
colour <- c("red", "blue", "green")
a <- c(paste(rep(colour, 4), "room", sep = " "), "brown room")
i <- NULL
j <- NULL
b <- NULL
for (i in 1:12){
for (j in 1:3){
if(grepl(colour[j], a[i])==T){
b <- append(b, a[i])
}else{
next(j)
}
}
}
a
b
setdiff(a, b)
union(a,b)
?setdiff
setequal(a,b)
intersect(a,b)
a
setdiff(a, b)
a[a=="brown room"]
?which
a[-which(a == "brown room")]
a
a[-which(a == setdiff(a, b))]
a
patterns <- c("opinion of the Court by Chief Justice Boyle", "opinion of the court, by ch. j. boyle",
"opinion of the court by judge boyle", "opinion of the court by chief justice boyle",
"chief justice boyle delivered the opinion of the court", "opinion of the court, by judge boyle",
"judge boyle delivered the opinion of the court", "judge boyle delivered the determination of the court",
"following opinion was delivered by Chief Justice Boyle")
seq_along(patterns)
clean_up()
divide_into_cases("boyle")
rm (a,b,colour,i,j)
rm (s)
path  <- paste(getwd(), justice, sep = "/")
justice <- "boyle"
path  <- paste(getwd(), justice, sep = "/")
files_in <- list.files(path = path, pattern = paste("^", justice, sep = "")) #all files??
i  <- NULL
j  <- NULL
keep.case <- NULL
for(i in seq(along = files_in)) {
for(j in seq(along = patterns)){
x <- scan(paste(path, files_in[i], sep = "/"), what = "character", sep = "\n")
if (grepl(patterns[j], x)==T){
keep.case <- append(keep.case, files_in[i]}else{
next(j)
}
}
}
justice <- "boyle"
path  <- paste(getwd(), justice, sep = "/")
files_in <- list.files(path = path, pattern = paste("^", justice, sep = ""))
i  <- NULL
j  <- NULL
keep.case <- NULL
for(i in seq(along = files_in)) {
for(j in seq(along = patterns)){
x <- scan(paste(path, files_in[i], sep = "/"), what = "character", sep = "\n")
if (grepl(patterns[j], x)==T){
keep.case <- append(keep.case, files_in[i]}else{
next(j)
}
}
next(i)
}
for(i in seq(along = files_in)) {
for(j in seq(along = patterns)){
x <- scan(paste(path, files_in[i], sep = "/"), what = "character", sep = "\n")
if (grepl(patterns[j], x) == T){
keep.case <- append(keep.case, files_in[i])}else{
next(j)
}
}
next(i)
}
head(files_in)
?append
justice <- "boyle"
path  <- paste(getwd(), justice, sep = "/")
files_in <- list.files(path = path, pattern = paste("^", justice, sep = ""))
i  <- NULL
j  <- NULL
keep.case <- NULL
for(i in seq(along = files_in)) {
for(j in seq(along = patterns)){
x <- scan(paste(path, files_in[i], sep = "/"), what = "character", sep = "\n")
if (grepl(patterns[j], x) == T){
keep.case <- append(keep.case, files_in[i])
print(files_in[i])
}else{
next(j)
}
}
next(i)
}
keep.case
justice <- "boyle"
path  <- paste(getwd(), justice, sep = "/")
files_in <- list.files(path = path, pattern = paste("^", justice, sep = ""))
i  <- NULL
j  <- NULL
keep.case <- NULL
for(i in seq(along = files_in)) {
for(j in seq(along = patterns)){
print(j)
}
print(i)
}
patterns <- c("opinion of the Court by Chief Justice Boyle", "opinion of the court, by ch. j. boyle",
"opinion of the court by judge boyle", "opinion of the court by chief justice boyle",
"chief justice boyle delivered the opinion of the court", "opinion of the court, by judge boyle",
"judge boyle delivered the opinion of the court", "judge boyle delivered the determination of the court",
"following opinion was delivered by Chief Justice Boyle")
justice <- "boyle"
path  <- paste(getwd(), justice, sep = "/")
files_in <- list.files(path = path, pattern = paste("^", justice, sep = ""))
i  <- NULL
j  <- NULL
keep.case <- NULL
for(i in seq(along = files_in)) {
for(j in seq(along = patterns)){
x <- scan(paste(path, files_in[i], sep = "/"), what = "character", sep = "\n")
print(files_in[i])
print(pattern [j])
next(j)
}
next(i)
}
justice <- "boyle"
path  <- paste(getwd(), justice, sep = "/")
files_in <- list.files(path = path, pattern = paste("^", justice, sep = ""))
i  <- NULL
j  <- NULL
keep.case <- NULL
for(i in seq(along = files_in)) {
for(j in seq(along = patterns)){
x <- scan(paste(path, files_in[i], sep = "/"), what = "character", sep = "\n")
print(files_in[i])
print(patterns [j])
next(j)
}
next(i)
}
justice <- "boyle"
path  <- paste(getwd(), justice, sep = "/")
files_in <- list.files(path = path, pattern = paste("^", justice, sep = ""))
i  <- NULL
j  <- NULL
keep.case <- NULL
for(i in seq(along = files_in)) {
for(j in seq(along = patterns)){
x <- scan(paste(path, files_in[i], sep = "/"), what = "character", sep = "\n")
if (grepl(pattern[j], x) == T){
print(files_in[i])
}else{
next(j)
}
next(i)
}
}
justice <- "boyle"
path  <- paste(getwd(), justice, sep = "/")
files_in <- list.files(path = path, pattern = paste("^", justice, sep = ""))
i  <- NULL
j  <- NULL
keep.case <- NULL
for(i in seq(along = files_in)) {
for(j in seq(along = patterns)){
x <- scan(paste(path, files_in[i], sep = "/"), what = "character", sep = "\n")
if (grepl(patterns[j], x) == T){
print(files_in[i])
}else{
next(j)
}
next(i)
}
}
colour <- c("red", "blue", "green")
a <- c(paste(rep(colour, 4), "room", sep = " "), "brown room")
i <- NULL
j <- NULL
b <- NULL
for (i in 1:12){
for (j in 1:3){
if(grepl(colour[j], a[i])==T){
b <- append(b, a[i])
}else{
next(j)
}
}
}
files.in[1]
justice <- "boyle"
path  <- paste(getwd(), justice, sep = "/")
files_in <- list.files(path = path, pattern = paste("^", justice, sep = ""))
i  <- NULL
j  <- NULL
keep.case <- NULL
for(i in seq(along = files_in)) {
for(j in seq(along = patterns)){
x <- scan(paste(path, files_in[i], sep = "/"), what = "character", sep = "\n")
if (grepl(patterns[j], x) == T){
print(files_in[i])
}else{
next(j)
}
next(i)
}
}
justice <- "boyle"
path  <- paste(getwd(), justice, sep = "/")
files_in <- list.files(path = path, pattern = paste("^", justice, sep = ""))
i  <- NULL
j  <- NULL
keep.case <- NULL
for(i in seq(along = files_in)) {
for(j in seq(along = patterns)){
x <- scan(paste(path, files_in[i], sep = "/"), what = "character", sep = "\n")
if (grepl(patterns[j], x) == T){
print(files_in[i])
}else{
next(j)
}
next(i)
}
}
patterns <- c("opinion of the Court by Chief Justice Boyle", "opinion of the court, by ch. j. boyle",
"opinion of the court by judge boyle", "opinion of the court by chief justice boyle",
"chief justice boyle delivered the opinion of the court", "opinion of the court, by judge boyle",
"judge boyle delivered the opinion of the court", "judge boyle delivered the determination of the court",
"following opinion was delivered by Chief Justice Boyle")
justice <- "boyle"
path  <- paste(getwd(), justice, sep = "/")
files_in <- list.files(path = path, pattern = paste("^", justice, sep = ""))
i  <- NULL
j  <- NULL
keep.case <- NULL
for(i in seq(along = files_in)) {
for(j in seq(along = patterns)){
x <- scan(paste(path, files_in[i], sep = "/"), what = "character", sep = "\n")
if (grepl(patterns[j], x) == T){
print(files_in[i])
}else{
next(j)
}
next(i)
}
}
file <- paste(getwd(), justice, files_out[i], sep = "/")
justice <- "boyle"
path  <- paste(getwd(), justice, sep = "/")
files_in <- list.files(path = path, pattern = paste("^", justice, sep = ""))
i  <- NULL
j  <- NULL
keep.case <- NULL
for(i in seq(along = files_in)) {
for(j in seq(along = patterns)){
x <- scan(paste(path, files_in[i], sep = "/"), what = "character", sep = "\n")
if (grepl(patterns[j], x) == T){
print(files_in[i])
}else{
next(j)
}
}
}
patterns[1]
justice <- "boyle"
path  <- paste(getwd(), justice, sep = "/")
files_in <- list.files(path = path, pattern = paste("^", justice, sep = ""))
i  <- NULL
j  <- NULL
keep.case <- NULL
for(i in seq(along = files_in)) {
for(j in seq(along = patterns)){
x <- scan(paste(path, files_in[i], sep = "/"), what = "character", sep = "\n")
if (grepl(patterns[j], x)){
print(files_in[i])
}else{
next(j)
}
}
}
x <- scan(paste(path, files_in[1], sep = "/"), what = "character", sep = "\n")
justice <- "boyle"
path  <- paste(getwd(), justice, sep = "/")
files_in <- list.files(path = path, pattern = paste("^", justice, sep = ""))
i  <- NULL
j  <- NULL
keep.case <- NULL
x <- scan(paste(path, files_in[1], sep = "/"), what = "character", sep = "\n")
for(j in seq(along = patterns)){
if (grepl(patterns[j], x)){
print(files_in[i])
}else{
next(j)
}
}
justice <- "boyle"
path  <- paste(getwd(), justice, sep = "/")
files_in <- list.files(path = path, pattern = paste("^", justice, sep = ""))
i  <- NULL
j  <- NULL
keep.case <- NULL
x <- scan(paste(path, files_in[1], sep = "/"), what = "character", sep = "\n")
for(j in seq(along = patterns)){
if (grepl(patterns[j], x)){
print(files_in[1])
}else{
next(j)
}
}
x <- scan(paste(path, files_in[1], sep = "/"), what = "character", sep = "\n")
for(j in seq(along = patterns)){
if (grepl(patterns[j], x)){
print(patterns[j])
}else{
next(j)
}
}
patterns[1]
grepl(patterns[1:9], x)
grepl(patterns[1], x)
justice <- "boyle"
path  <- paste(getwd(), justice, sep = "/")
files_in <- list.files(path = path, pattern = paste("^", justice, sep = ""))
i  <- NULL
j  <- NULL
keep.case <- NULL
x <- scan(paste(path, files_in[1], sep = "/"), what = "character", sep = "\n")
for(j in seq(along = patterns)){
grepl(patterns[j], x))
for(j in seq(along = patterns)){
grepl(patterns[j], x))
for(j in seq(along = patterns)){
grepl(patterns[j], x)
}else{
x <- scan(paste(path, files_in[1], sep = "/"), what = "character", sep = "\n")
for(j in seq(along = patterns)){
grepl(patterns[j], x)
next(j)
}
}
for(j in seq(along = patterns)){
grepl(patterns[j], x)
next(j)
}
for(j in seq(along = patterns)){
print(grepl(patterns[j], x))
next(j)
}
x <- scan(paste(path, files_in[2], sep = "/"), what = "character", sep = "\n")
for(j in seq(along = patterns)){
print(grepl(patterns[j], x))
next(j)
}
x <- scan(paste(path, files_in[2], sep = "/"), what = "character", sep = "\n")
for(j in seq(along = patterns)){
print(grepl(patterns[j], x, ignore.cases = T))
next(j)
}
?grepl
x <- scan(paste(path, files_in[2], sep = "/"), what = "character", sep = "\n")
for(j in seq(along = patterns)){
print(grepl(patterns[j], x, ignore.case = T))
next(j)
}
x <- scan(paste(path, files_in[1], sep = "/"), what = "character", sep = "\n")
for(j in seq(along = patterns)){
print(grepl(patterns[j], x, ignore.case = T))
next(j)
}
justice <- "boyle"
path  <- paste(getwd(), justice, sep = "/")
files_in <- list.files(path = path, pattern = paste("^", justice, sep = ""))
i  <- NULL
j  <- NULL
keep.case <- NULL
for (i in seq(along = files_in){
for (i in seq(along = files_in)){
for(j in seq(along = patterns)){
x <- scan(paste(path, files_in[1], sep = "/"), what = "character", sep = "\n")
if(grepl(patterns[j], x, ignore.case = T)){
keep.case <- append(keep.case, files_in[i])
print(files_in[i])
}else{
next(j)}
}
next(j)
}
justice <- "boyle"
path  <- paste(getwd(), justice, sep = "/")
files_in <- list.files(path = path, pattern = paste("^", justice, sep = ""))
i  <- NULL
j  <- NULL
keep.case <- NULL
for (i in seq(along = files_in)){
for(j in seq(along = patterns)){
x <- scan(paste(path, files_in[1], sep = "/"), what = "character", sep = "\n")
if(grepl(patterns[j], x, ignore.case = T) == T){
keep.case <- append(keep.case, files_in[i])
print(files_in[i])
}else{
next(j)}
}
next(j)
}
length(keep.case)
justice <- "boyle"
path  <- paste(getwd(), justice, sep = "/")
files_in <- list.files(path = path, pattern = paste("^", justice, sep = ""))
i  <- NULL
j  <- NULL
keep.case <- NULL
for (i in seq(along = files_in)){
for(j in seq(along = patterns)){
x <- scan(paste(path, files_in[i], sep = "/"), what = "character", sep = "\n")
if(grepl(patterns[j], x, ignore.case = T) == T){
keep.case <- append(keep.case, files_in[i])
print(files_in[i])
}else{
next(j)}
}
next(j)
}
length(unique(keep.case))
keep.case <- unique(keep.case)
setdiff(keep.case, files_in)
files_in <- list.files(path = path, pattern = paste("^", justice, sep = ""))
setdiff(keep.case, files_in)
keep.case
files_in
head(keep.case)
head(files_in)
keep.case[1] == files_in[1]
setdiff(files_in, keep.case)
setdiff(1:10, 1:6)
setdiff(files_in, keep.case)
?remove.file
??remove.file
?unlink
path
paste(path, setdiff(files_in, keep.case), sep = "/")
unlink(paste(path, setdiff(files_in, keep.case), sep = "/"))
setdiff(files_in, keep.case)
list.files(path = path)
patterns <- c("opinion of the Court by Chief Justice Boyle", "opinion of the court, by ch. j. boyle",
"opinion of the court by judge boyle", "opinion of the court by chief justice boyle",
"chief justice boyle delivered the opinion of the court", "opinion of the court, by judge boyle",
"judge boyle delivered the opinion of the court", "judge boyle delivered the determination of the court",
"following opinion was delivered by Chief Justice Boyle")
justice <- "boyle"
path  <- paste(getwd(), justice, sep = "/")
files_in <- list.files(path = path, pattern = paste("^", justice, sep = ""))
i  <- NULL
j  <- NULL
keep.case <- NULL
for (i in seq(along = files_in)){
for(j in seq(along = patterns)){
x <- scan(paste(path, files_in[i], sep = "/"), what = "character", sep = "\n")
if(grepl(patterns[j], x, ignore.case = T) == T){
keep.case <- append(keep.case, files_in[i])
print(files_in[i])
}else{
next(j)}
}
next(j)
}
keep.case <- unique(keep.case)
unlink(paste(path, setdiff(files_in, keep.case), sep = "/"))
}
confirm_boyle_author <- function{
patterns <- c("opinion of the Court by Chief Justice Boyle", "opinion of the court, by ch. j. boyle",
"opinion of the court by judge boyle", "opinion of the court by chief justice boyle",
"chief justice boyle delivered the opinion of the court", "opinion of the court, by judge boyle",
"judge boyle delivered the opinion of the court", "judge boyle delivered the determination of the court",
"following opinion was delivered by Chief Justice Boyle")
justice <- "boyle"
path  <- paste(getwd(), justice, sep = "/")
files_in <- list.files(path = path, pattern = paste("^", justice, sep = ""))
i  <- NULL
j  <- NULL
keep.case <- NULL
for (i in seq(along = files_in)){
for(j in seq(along = patterns)){
x <- scan(paste(path, files_in[i], sep = "/"), what = "character", sep = "\n")
if(grepl(patterns[j], x, ignore.case = T) == T){
keep.case <- append(keep.case, files_in[i])
print(files_in[i])
}else{
next(j)}
}
next(j)
}
keep.case <- unique(keep.case)
unlink(paste(path, setdiff(files_in, keep.case), sep = "/"))
}
confirm_boyle_author <- function{
