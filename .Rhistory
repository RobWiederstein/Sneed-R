"judge owsley delivered the opinion of the court",
"opinion of the court by judge owsley",
"judge owsley delivered the following opinion")
justice <- "owsley"
path <- paste(getwd(), justice, sep = "/")
files_in <- list.files(path = path)
i  <- NULL
j  <- NULL
keep.case <- NULL
for (i in seq(along = files_in)){
for(j in seq(along = patterns)){
x <- scan(paste(path, files_in[i], sep = "/"), what = "character", sep = "\n")
if(grepl(patterns[j], x, ignore.case = T) == T){
keep.case <- append(keep.case, files_in[i])
print(files_in[i])
}else{
next(j)}
}
next(j)
}
keep.case <- unique(keep.case)
unlink(paste(path, setdiff(files_in, keep.case), sep = "/"))
}
confirm_owsley_author <- function(){
patterns <- c("judge owsley delivered the opinion of the court",
"opinion of the court, by judge owsley",
"judge owsley delivered the opinion of the court",
"opinion of the court by judge owsley",
"judge owsley delivered the following opinion")
justice <- "owsley"
path <- paste(getwd(), justice, sep = "/")
files_in <- list.files(path = path)
i  <- NULL
j  <- NULL
keep.case <- NULL
for (i in seq(along = files_in)){
for(j in seq(along = patterns)){
x <- scan(paste(path, files_in[i], sep = "/"), what = "character", sep = "\n")
if(grepl(patterns[j], x, ignore.case = T) == T){
keep.case <- append(keep.case, files_in[i])
print(files_in[i])
}else{
next(j)}
}
next(j)
}
keep.case <- unique(keep.case)
unlink(paste(path, setdiff(files_in, keep.case), sep = "/"))
}
source("functions.R")
#build boyle corpus
divide_into_cases("boyle")
confirm_boyle_author()
strip_headnotes("boyle")
cut_dissent_concur("boyle")
clean_up()
source("functions.R")
#build boyle corpus
divide_into_cases("boyle")
confirm_boyle_author()
strip_headnotes("boyle")
cut_dissent_concur("boyle")
#build mills corpus
divide_into_cases("mills")
confirm_mills_author()
source('~/.active-rstudio-document', echo=TRUE)
confirm_mills_author()
strip_headnotes("mills")
cut_dissent_concur("mills")
#build owsley corpus
divide_into_cases("owsley")
confirm_owsley_author()
strip_headnotes("owsley")
cut_dissent_concur("owsley")
#take 25 random cases from each justice
#for classify () in "primary_set" & compare to Sneed
copy_case_to_primary_set("boyle")
copy_case_to_primary_set("mills")
copy_case_to_primary_set("owsley")
#take 25 random cases from each justice and
#place into "corpus" directory for stylometry
copy_case_to_corpus("boyle", size = 10, seed = 16)
copy_case_to_corpus("mills", size = 10, seed = 16)
copy_case_to_corpus("owsley", size = 10, seed = 16)
#Compare writing styles of justices with Stylo.
library (stylo)
a <- stylo()
library (stylo)
a <- stylo()
copy_case_to_corpus("boyle", size = 15, seed = 1)
copy_case_to_corpus("mills", size = 15, seed = 1)
copy_case_to_corpus("owsley", size = 15, seed = 1)
#Compare writing styles of justices with Stylo.
library (stylo)
a <- stylo()
file.info()
?file.info
getwd()
list.files(path = getwd())
file.info(list.files(path = getwd()))
a <- file.info(list.files(path = getwd()))
names(a)
class(a)
justice <- "mills"
path <- paste(getwd(), justice, sep = "/")
a <- file.info(list.files(path = getwd()))
a <- file.info(list.files(path = path)
a <- file.info(list.files(path = path))
head(a)
tail(a)
path
a
a <- file.info(list.files(path = path), as.character = T)
a
a <- file.info(list.files(path = getwd()), as.character = T)
head(a)
str(a)
getwd()
path
justice <- "boyle"
path <- paste(getwd(), justice, sep = "/")
a <- file.info(list.files(path = getwd()), as.character = T)
a <- file.info(list.files(path = path))
View(a)
ncol(finf <- file.info(dir()))
?dir
?dir()
dir()
file.info (dir())
finf <- file.info(dir())
setwd(path = path)
path <- paste(getwd(), justice, sep = "/")
setwd(path = path)
setwd()
?setwd()
setwd("~\Git\Sneed-R\mills"")
dir()
getdir()
getwd()
setwd("~/Git/Sneed-R/mills")
getwd()
a <- file.info(dir())
head (a)
attach(a)
detach(a)
str(a)
row.names(a)
names(a)
files_by_size <- a[, a$size]
files_by_size <- a[, 1]
a
files_by_size <- a[, 1]
names(a)
a[1,1]
a[1:5, 1:5]
a[, 1]
a <- a[,1]
a
class(a)
names(a)
justice <- "boyle"
path <- paste(getwd(), justice, sep = "/")
setwd() <- path
setwd(path)
a <- file.info(list.files(path = getwd()))
head(a)
b <- (c(1: nrows(a)))
length(a)
rows(a)
row(a)
dim(a)
?dim
dim(a)[1]
b <- (c(1: dim(a)[1])
)
names(b) <- rownames(a)
b[1:10]
justice <- "boyle"
path <- paste(getwd(), justice, sep = "/")
setwd(path)
?setwd
path
getwd()
justice <- "boyle"
path <- paste(getwd(), justice, sep = "/")
setwd(path)
path
getwd()
setwd("~Git/Sneed-R/")
setwd("~/Git/Sneed-R")
getwd()
a <- file.info(list.files(path = getwd()))
path
path <- paste(getwd(), justice, sep = "/")
path
setwd(path)
a <- file.info(list.files(path = getwd()))
head(a)
names(a)
a <- a[, c(1,2)]
View(a)
a <- a[, 1]
a <- file.info(list.files(path = getwd()))
file_name <- rownames(a)
size <- a[, 1]
a <-cbind(file_name, size)
?as.data.frame
a <- as.data.frame(a, stringsAsFactors = F)
View(a)
attach(a)
b <- a[sort(a$size), ]
View(b)
View(a)
b <- a[, sort(a$size)]
b <- a[, sort(size)]
View(b)
b <- a[sort(size), ]
View(b)
justice <- "boyle"
path <- paste(getwd(), justice, sep = "/")
setwd(path)
getwd()
a <- file.info(list.files(path = getwd()))
file_name <- rownames(a)
size <- a[, 1]
a <-cbind(file_name, size)
a <- as.data.frame(a, stringsAsFactors = F)
attach(a)
b <- a[sort(size), ]
View(b)
justice <- "boyle"
path <- paste(getwd(), justice, sep = "/")
setwd(path)
a <- file.info(list.files(path = getwd()))
file_name <- rownames(a)
size <- a[, 1]
a <-cbind(file_name, size)
a <- as.data.frame(a, stringsAsFactors = F)
View(a)
View(a)
detach(a)
a <- as.data.frame(a, stringsAsFactors = F)
View(a)
str(a)
a$size <- as.integer(a$size)
View(a)
str(a)
attach(a)
b <- a[sort(size), ]
View(b)
getwd()
a <- file.info(list.files(path = getwd()))
file_name <- rownames(a)
size <- a[, 1]
a <-cbind(file_name, size)
a <- as.data.frame(a, stringsAsFactors = F)
a$size <- as.integer(a$size)
b <- a[order(size), ]
View(b)
b <- a[rev(order(size)), ]
View(b)
size <- 10
path <- paste(getwd(), justice, sep = "/")
setwd(path)
a <- file.info(list.files(path = getwd()))
file_name <- rownames(a)
size <- a[, 1]
a <-cbind(file_name, size)
a <- as.data.frame(a, stringsAsFactors = F)
a$size <- as.integer(a$size)
attach(a)
b <- a[rev(order(size)), ]
b <- a[1:size, file_name]
b <- a[c(1:size), file_name]
View(b)
a[, file_name]
a[file_name, ]
View(b)
b <- b[c(1:size), file_name]
b <- b[c(1:size), 2]
justice <- "boyle"
size <- 10
path <- paste(getwd(), justice, sep = "/")
setwd(path)
a <- file.info(list.files(path = getwd()))
file_name <- rownames(a)
size <- a[, 1]
a <-cbind(file_name, size)
a <- as.data.frame(a, stringsAsFactors = F)
a$size <- as.integer(a$size)
attach(a)
b <- a[rev(order(size)), ]
b <- b[1:10, 2]
b <- a[rev(order(size)), ]
b <- b[1:10, 1]
detach(a)
search()
detach(a)
detach(a)
detach(a)
search()
path
usual_path <- "~/Git/Sneed-R"
usual_path
usual_path <- path.expand("~/Git/Sneed-R")
justice_path <- paste(usual_path, justice, sep = "/")
justice <- "boyle"
usual_path <- path.expand("~/Git/Sneed-R")
justice_path <- paste(usual_path, justice, sep = "/")
size <- 10
getwd()
setwd("~/Git/Sneed-R")
usual_path
setwd(usual_path)
getwd()
justice_path
setwd(justice_path)
justice <- "boyle"
getwd()
setwd(usual_path)
usual_path <- path.expand("~/Git/Sneed-R") #assumes this is the wd()
setwd(usual_path)
justice_path <- paste(usual_path, justice, sep = "/")
size <- 10
setwd(justice_path)
a <- file.info(list.files(path = getwd()))
sample_size <- 10
file_name <- rownames(a)
size <- a[, 1]
a <-cbind(file_name, size)
a <- as.data.frame(a, stringsAsFactors = F)
a$size <- as.integer(a$size)
attach(a)
b <- a[rev(order(size)), ]
b <- b[1:10, 1]
detach(a)
setwd(usual_path)
b
seq(sample_size)
seq_along(sample_size)
justice <- "boyle"
usual_path <- path.expand("~/Git/Sneed-R") #assumes this is the wd()
justice_path <- paste(usual_path, justice, sep = "/")
sample_size <- 10
setwd(justice_path)
a <- file.info(list.files(path = getwd()))
file_name <- rownames(a)
size <- a[, 1]
a <-cbind(file_name, size)
a <- as.data.frame(a, stringsAsFactors = F)
a$size <- as.integer(a$size)
attach(a)
boyle_files <- a[rev(order(size)), ]
boyle_files <- boyle_files[seq_along(sample_size), 1]
detach(a)
setwd(usual_path)
search()
boyle_files
justice <- "boyle"
usual_path <- path.expand("~/Git/Sneed-R") #assumes this is the wd()
justice_path <- paste(usual_path, justice, sep = "/")
sample_size <- 10
setwd(justice_path)
a <- file.info(list.files(path = getwd()))
file_name <- rownames(a)
size <- a[, 1]
a <-cbind(file_name, size)
a <- as.data.frame(a, stringsAsFactors = F)
a$size <- as.integer(a$size)
attach(a)
boyle_files <- a[rev(order(size)), ]
boyle_files <- boyle_files[c(seq_along(sample_size)), 1]
boyle_files
a[1:sample_size,]
a[1:sample_size, ]
a[1:sample_size, 1]
boyle_files <- a[rev(order(size)), ]
boyle_files <- boyle_files[1:sample_size, 1]
detach(a)
setwd(usual_path)
boyle_files
justice <- "boyle"
sample_size <- 10
usual_path <- path.expand("~/Git/Sneed-R") #assumes this is the wd()
justice_path <- paste(usual_path, justice, sep = "/")
setwd(justice_path)
a <- file.info(list.files(path = getwd()))
file_name <- rownames(a)
size <- a[, 1]
a <-cbind(file_name, size)
a <- as.data.frame(a, stringsAsFactors = F)
a$size <- as.integer(a$size)
attach(a)
boyle_files <- a[rev(order(size)), ]
boyle_files <- boyle_files[1:sample_size, 1]
detach(a)
setwd(usual_path)
boyle_files
paste(justice_path, boyle_files, sep = "/")
file.copy()
?file.copy
dest_path <- paste(usual_path, corpus, sep = "/")
dest_path <- paste(usual_path, "corpus", sep = "/")
dest_path
from <- paste(justice_path, boyle_files, sep = "/")
from <- paste(justice_path, boyle_files, sep = "/")
to <- paste(dest_path, boyle_files, sep = "/")
from
to
justice <- "boyle"
sample_size <- 10
usual_path <- path.expand("~/Git/Sneed-R") #assumes this is the wd()
justice_path <- paste(usual_path, justice, sep = "/")
dest_path <- paste(usual_path, "corpus", sep = "/")
setwd(justice_path)
a <- file.info(list.files(path = getwd()))
file_name <- rownames(a)
size <- a[, 1]
a <-cbind(file_name, size)
a <- as.data.frame(a, stringsAsFactors = F)
a$size <- as.integer(a$size)
attach(a)
justice_files <- a[rev(order(size)), ]
justice_files <- justice_files[1:sample_size, 1]
detach(a)
setwd(usual_path)
from <- paste(justice_path, boyle_files, sep = "/")
from <- paste(justice_path, justice_files, sep = "/")
to <- paste(dest_path, justice_files, sep = "/")
file.copy(from = from, to = to)
biggest_cases_for_corpus <- function(justice, sample_size = 10){
usual_path <- path.expand("~/Git/Sneed-R") #assumes this is the wd()
justice_path <- paste(usual_path, justice, sep = "/")
dest_path <- paste(usual_path, "corpus", sep = "/")
setwd(justice_path)
a <- file.info(list.files(path = getwd()))
file_name <- rownames(a)
size <- a[, 1]
a <-cbind(file_name, size)
a <- as.data.frame(a, stringsAsFactors = F)
a$size <- as.integer(a$size)
attach(a)
justice_files <- a[rev(order(size)), ]
justice_files <- justice_files[1:sample_size, 1]
detach(a)
setwd(usual_path)
from <- paste(justice_path, justice_files, sep = "/")
to <- paste(dest_path, justice_files, sep = "/")
file.copy(from = from, to = to)
}
biggest_cases_for_corpus <- function(justice, sample_size = 10){
usual_path <- path.expand("~/Git/Sneed-R") #assumes this is the wd()
justice_path <- paste(usual_path, justice, sep = "/")
dest_path <- paste(usual_path, "corpus", sep = "/")
setwd(justice_path)
a <- file.info(list.files(path = getwd()))
file_name <- rownames(a)
size <- a[, 1]
a <-cbind(file_name, size)
a <- as.data.frame(a, stringsAsFactors = F)
a$size <- as.integer(a$size)
attach(a)
justice_files <- a[rev(order(size)), ]
justice_files <- justice_files[1:sample_size, 1]
detach(a)
setwd(usual_path)
from <- paste(justice_path, justice_files, sep = "/")
to <- paste(dest_path, justice_files, sep = "/")
file.copy(from = from, to = to)
justice_files
}
source('~/.active-rstudio-document', echo=TRUE)
biggest_cases_for_corpus("mills")
biggest_cases_for_corpus("owsley")
library (stylo)
a <- stylo()
source('~/Git/Sneed-R/functions.R', echo=TRUE)
copy_case_to_primary_set("boyle", 20)
copy_case_to_primary_set("boyle", 10)
biggest_cases_for_corpus("mills", 20)
biggest_cases_for_corpus("owsley", 20)
biggest_cases_for_corpus("boyle", 20)
library (stylo)
a <- stylo()
copy_case_to_corpus("boyle", size = 20, seed = 2)
copy_case_to_corpus("mills", size = 20, seed = 2)
copy_case_to_corpus("owsley", size = 20, seed = 2)
library (stylo)
a <- stylo()
biggest_cases_for_corpus("mills", 25)
biggest_cases_for_corpus("owsley", 25)
biggest_cases_for_corpus("boyle", 25)
library (stylo)
a <- stylo()
a <- stylo()
library (stylo)
a <- stylo()
library (stylo)
a <- stylo()
library (stylo)
a <- stylo()
a <- stylo()
a <- stylo()
a <- stylo()
a <- stylo()
a <- stylo()
a <- stylo()
copy_case_to_primary_set("boyle", size = 50)
copy_case_to_primary_set("mills", size = 50)
copy_case_to_primary_set("owsley", size = 50)
b <- classify()
clean_up()
