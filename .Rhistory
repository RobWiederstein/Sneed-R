}
Main()
Main()()
runif
a <- runif(100, 0, 1)
a
options
?options
options(digits = 2)
a
options(digits = 1)
a
plot (hist(a))
summary(a)
?summary
a <- runif(100, 0, 1)
b <- runif(100, 0, 1)
plot (a,b)
c <- lm(a,b)
c <- lm(a~b)
c
summary (c)
rnorm
a <- rnorm(100, mean = 1, sd = 2)
plot (a)
?rnorm
?data
ls(data)
a <- rnorm(1000, mean = 1, sd = 2)
plot (a)
plot (hist(a))
a[1:50]
a <- rnorm(1000, mean = 1, sd = .5)
plot (hist(a))
a <- rnorm(1000, mean = 1, sd = .5)
plot(a)
plot (hist(a))
a <- rnorm(1000, mean = 1, sd = 5)
plot(a)
plot (hist(a))
a <- rnorm(1000, mean = 1, sd = 1)
plot(a)
plot (hist(a))
a <- rnorm(1000, mean = 1, sd = 10)
plot(a)
plot (hist(a))
a <- rnorm(1000, mean = 1, sd = 10)
plot(a)
plot (hist(a))
plot (density(a))
boxplot(a)
a <- rnorm(1000, mean = 1, sd = 1)
plot(a)
plot (hist(a))
plot (density(a))
boxplot(a)
distributions
rnorm
?rnorm
pnorm
pnorm(a)
qnorm(a)
data
help(data)
?data
data()
ChickWeight
head(ChickWeight)
Chickweight
?Chickweight
??ChickWeight
head(ChickWeight, 20)
table(ChickWeight[,3], ChickWeight[,4])
data(Titanic)
summary(Titanic)
?Titanic
table(Titanic$Age, Titanic$Survived)
table(Titanic[,3], Titanic[,4])
head(Titanic)
str(Titanic)
Titanic <- as.data.frame(Titanic)
View(Titanic)
library(ggplot2)
data(ggplot)
data(diamonds)
head(diamonds)
table(diamonds$clarity)
table(cut)
str(diamonds)
?diamonds
?lm
d <- lm(lm$price~lm$carat)
d <- lm(diamonds$price~diamonds$carat)
summary (d)
d
qplot
qplot(carat, price, data = diamonds)
summary (d)
d
qplot(carat, data = diamonds)
plot(d)
qplot
qplot()
qplot(carat, price, data = diamonds, facets = cut)
qplot(carat, price, data = diamonds, facets = cut)
?formulas
?lm
d <- lm(diamonds$price~diamonds$carat +
diamonds$color)
summary (d)
d[[1]]
d[[2]]
d[[3]]
d[[4]]
summary (d)
d <- lm(diamonds$price~diamonds$carat)
summary (d)
d <- lm(diamonds$price~diamonds$carat +
diamonds$color)
summary(d)
d <- lm(diamonds$price~diamonds$carat +
diamonds$color +
diamonds$clarity)
summary(d)
d <- lm(diamonds$price~diamonds$carat +
diamonds$color +
diamonds$clarity +
diamonds$table)
summary(d)
d <- lm(diamonds$price~diamonds$carat +
diamonds$color +
diamonds$clarity +
diamonds$cut)
summary(d)
d <- lm(diamonds$price~diamonds$carat +
diamonds$color +
diamonds$clarity +
diamonds$cut +
diamonds$depth)
summary(d)
d <- lm(diamonds$price~diamonds$carat +
diamonds$color +
diamonds$clarity +
diamonds$cut +
diamonds$depth +
diamonds$table)
summary(d)
plot(d)
data(galton)
??galton
p <- ggplot(diamonds, aes(price, carat))
p <- p + geom_point()
p
p <- ggplot(diamonds, aes(carat, price))
p <- p + geom_point()
p
p <- ggplot(diamonds, aes(carat, price))
p <- p + geom_point(colour = cut)
p
?ggplot
agrs(ggplot)
args(ggplot)
ggplot
body(ggplot)
lm
?lm
library (stylo)
setwd("~/Desktop/crypto")
whitman <- scan(captain.txt)
whitman <- scan("captain.txt")
whitman <- scan("captain.txt", what = character)
whitman <- scan("captain.txt", what = "character")
whitman
?scan
whitman <- scan("captain.txt", what = "character", sep = "/n")
whitman <- scan("captain.txt", what = "character", sep = "\n")
whitman
whitman <- scan("captain.txt",
what = "character",
sep = "\n",
strip.white = T)
whitman
?table
table(whitman)
library(stringr)
str_c(whitman)
library(stringr)
str_c(whitman)
gsub("m", "Q", whitman)
?stringr
?stringR
?stringr
code.sheet <- letters[1:26]
code.sheet
code.sheet <- c(letters[1:26], " ")
code.sheet <- data.frame(c(letters[1:26], " ") #+space)
code.sheet <- data.frame(c(letters[1:26], " ") )#+space
code.sheet <- data.frame(c(letters[1:26], " ") )#+space
View(code.sheet)
?set.seed
?select
??random select
??select
??replacement
?sample
sample(c(letters[1:26], " "), 27, replace = F)
code.sheet$scramble <- sample(c(letters[1:26], " "), 27, replace = F)
View(code.sheet)
whitman <- gsub("e", " ", whitman)
whitman <- gsub("e", " ", whitman)
sample(c(letters[1:26], " "), 27, replace = F)
whitman
whitman <- gsub("t", "g", whitman)
whitman
View(code.sheet)
whitman <- gsub("o", "y", whitman)
whitman
?gsub
whitman <- scan("captain.txt",
what = "character",
sep = "\n",
strip.white = T)
whitman <- gsub("e", " ", whitman, ignore.case = T)
whitman <- gsub("t", "g", whitman, ignore.case = T)
# "a" is for "a"
whitman <- gsub("o", "y", whitman, ignore.case = T)
whitman <- gsub("i", "m", whitman, ignore.case = T)
whitman
whitman <- gsub("n", "o", whitman, ignore.case = T)
whitman
?cat
cat(whitman)
print(whitman)
?print
whitman <- gsub("s", "c", whitman, ignore.case = T)
print(whitman)
whitman <- scan("captain.txt",
what = "character",
sep = "\n",
strip.white = T)
whitman
?grep
grep("e", whitman)
grepl("e", whitman)
regexpr("e", whitman)
gregexpr("e", whitman)
gregexpr("e", whitman)
whitman
========================================================
m <- "bc"
grep("b", m)
m <- "bc"
grep("b", m)
m[1]
str_split(m)
m <- "bc"
grep("b", m)
str_split(m)
str_split(m, pattern = "")
m
m <- c("bc", "de")
grep("b", m)
str_split(m, pattern = "")
str_split(m, pattern = " ")
str_split(m, pattern = "[A-Za-z")
str_split(m, pattern = "[A-Za-z]"
str_split(m, pattern = "[A-Za-z]")
str_split(m, pattern = "[A-Za-z]")
str_split(m, pattern = "[.]")
str_split(m, pattern = ".")
str_split(m, pattern = "")
grepl("b", m)
grep("b", m)
grep("b", m)
grepl("b", m)
gsub("b", m)
gsub("b","d" m)
gsub("b","d", m)
setwd("~/Git/Sneed-R")
library(stringr)
a <- c("a", "b", "c")
a <- paste (a[1], a[2], a[3], sep = "")
a <- letters[1:3]
a <- paste (a, collapse = "")
a <- strsplit(a, split = "", fixed = T)
a <- letters[1:3]
a <- unlist(str_split(a, pattern = ""))
x <- c(as = "asfef", qu = "qwerty", "yuiop[", "b", "stuff.blah.yech")
# split x on the letter e
strsplit(x, "e")
substr
data(USArrests)
head(USArrests)
rownames(USArrests)
states <- rownames(USArrests)
substr(states, start = 1, stop = 4)
abbrev
abbr
?abb
?abbrev
abbreviate(states)
names(states)
states
states[which(state_chars == max(state_chars))]
state_chars = nchar(states)
states[which(state_chars == max(state_chars))]
state_chars = nchar(states)
states[which(state_chars == max(state_chars))]
state_chars
names(state_chars)
max(state_chars)
state_chars == 14
which(state_chars == 14)
states[33,40]
states[c(33,40)]
grep("^N", states)
grep("^N", states, value = T)
grep("y$", states, value = T)
gregexpr(pattern = "a", text = states, ignore.case = TRUE)
positions_a <- gregexpr(pattern = "a", text = states, ignore.case = TRUE)
num_a <- sapply(positions_a, function(x) ifelse(x[1] > 0, length(x), 0))
num_a
sum(num_a)
str_count("a", states)
str_count(states, "a")
sum (str_count(states, "a"))
sum (str_count(tolower(states), "a"))
vowels <- c("a", "e", "i", "o", "u")
# vector for storing results
num_vowels = vector(mode = "integer", length = 5)
# calculate number of vowels in each name
for (j in seq_along(vowels)) {
num_aux = str_count(tolower(states), vowels[j])
num_vowels[j] = sum(num_aux) }
# add vowel names
names(num_vowels) = vowels
# total number of vowels
num_vowels
nchar(states)
sum(nchar(tolower(states)))
num_vowels/422
char_tot <- sum(nchar(tolower(states)))
#vector of vowels
vowels <- c("a", "e", "i", "o", "u")
# vector for storing results
num_vowels = vector(mode = "integer", length = 5)
# calculate number of vowels in each name
for (j in seq_along(vowels)) {
num_aux = str_count(tolower(states), vowels[j])
num_vowels[j] = sum(num_aux) }
# add vowel names
names(num_vowels) = vowels
# total number of vowels
num_vowels
# sort them in decreasing order
sort(num_vowels, decreasing = TRUE)
rep("A", 100)
paste(rep("A", 100), collapse = "")
cat(paste(rep("A", 1000), collapse = ""), fill = 100)
cat(paste(rep("A", 1000), collapse = ""), fill = 50)
rep("A", 1000)
cat(rep("A", 1000), fill = 25)
cat(rep("A", 1000), fill = 50)
cat(rep("A", 1000), fill = 100)
cat(rep("A", 1000), fill = 50)
sum(nchar(tolower(states)))
chartr
?chartr
rot <- function(ch, k = 13) {
p0 <- function(...) paste(c(...), collapse = "")
A <- c(letters, LETTERS, " '")
I <- seq_len(k); chartr(p0(A), p0(c(A[-I], A[I])), ch)
}
pw <- "my secret pass phrase"
(crypw <- rot(pw, 13)) #-> you can send this off
rot(crypw, 54 - 13) # -> the original:
stopifnot(identical(pw, rot(crypw, 54 - 13)))
whitman <- scan("captain.txt",
what = "character",
sep = "\n",
strip.white = T)
code.sheet <- data.frame(c(letters[1:26], " ") )#+space
code.sheet$scramble <- sample(c(letters[1:26], " "), 27, replace = F)
names (code.sheet)
key <- data.frame(c(letters[1:26], " ") )#+space
key <- data.frame(alpha = c(letters[1:26], " ") )#+space
key$scramble <- sample(c(letters[1:26], " "), 27, replace = F)
View(key)
whitman <- scan("captain.txt",
what = "character",
sep = "\n",
strip.white = T)
list.dir()
list.files()
list.dir()
?files
?charr
?chartr
setwd("~/Desktop/crypto")
ls
chartr
rm(code.sheet)
whitman <- scan("captain.txt",
what = "character",
sep = "\n",
strip.white = T)
cat(whitman)
print(whitman)
LETTERS()
LETTERS[1:26]
key <- data.frame(alpha = c(letters[1:26],LETTERS[1:26], " ") )#+space
key$scramble <- sample(c(letters[1:26], LETTERS[1:26], " "), 27, replace = F)
key <- data.frame(alpha = c(letters[1:26], LETTERS[1:26], " ") )#+space
key$scramble <- sample(c(letters[1:26], LETTERS[1:26], " "), 53, replace = F)
View(key)
set.seed <- 1234
key <- data.frame(alpha = c(letters[1:26], LETTERS[1:26], " ") )#+space
key$scramble <- sample(c(letters[1:26], LETTERS[1:26], " "), 53, replace = F)
whitman.new <- chartr(key$alpha, key$scramble, whitman)
key$alpha
?data.frame
key <- data.frame(alpha = c(letters[1:26], LETTERS[1:26], " "),
stringsAsFactors = F)#+space
key$scramble <- sample(c(letters[1:26], LETTERS[1:26], " "), 53, replace = F)
key$alpha
key$scramble <- sample(c(letters[1:26], LETTERS[1:26], "!"), 53, replace = F)
whitman.new <- chartr(key$alpha, key$scramble, whitman)
whitman.new
whitman.new <- chartr(paste(key$alpha, collapse = ""),
paste(key$scramble,collapse = ""), whitman)
whitman.new
whitman
whitman <- scan("captain.txt",
what = "character",
sep = "\n",
strip.white = T)
whitman
View(key)
whitman.new <- chartr(paste(key$alpha, collapse = ""),
paste(key$scramble,collapse = ""), whitman)
whitman.new
?match
1:10 %in% c(1,3,5,9)
match(1:10, 5:15)
?matrix
polybius <- matrix(data = letters[1:25], nrow = 5, nrow = 5)
polybius <- matrix(data = letters[1:25], nrow = 5, ncol = 5)
polybius
row.names(polybius)<- as.character(1:5)
row.names(polybius) <- as.character(1:5)
col.names(polybius) <- as.character(1:5)
polybius
?row.names
names(polybius)
names(polybius) <- as.character(1:5)
names(polybius)
polybius <- data.frame(data = letters[1:25], nrow = 5, ncol = 5)
row.names(polybius) <- as.character(1:5)
col.names(polybius) <- as.character(1:5)
View(polybius)
polybius <- matrix(data = letters[1:25], nrow = 5, ncol = 5)
row.names(polybius) <- as.character(1:5)
polybius
View(polybius)
names(polybius)
colnames(polybius)
col.names(polybius)
row.names(polybius)
polybius <- matrix(data = sample(letters[1:25], n = 25, replacement = F),
nrow = 5, ncol = 5)
?sample
polybius <- matrix(data = sample(letters[1:25], size = 25, replace = F),
nrow = 5, ncol = 5)
View(polybius)
polybius[1,1]
grep("t", polybius)
grep("d", polybius)
?which
which(polybius == "t")
polybius <- as.data.frame (polybius)
View(polybius)
View(polybius)
which(polybius == "t")
which(polybius == "q")
grep("q", polybius)
polybius[2,2]
polybius <- as.data.frame (polybius, stringsAsFactors = F)
which(polybius == "q")
polybius[1,1]
polybius <- matrix(data = sample(letters[1:25], size = 25, replace = F),
nrow = 5, ncol = 5)
polybius <- as.data.frame (polybius, stringsAsFactors = F)
str(polybius)
which (polybius == "q")
polybius[2,2]
table(unlist(lapply(whitman, strsplit, ""), use.names = FALSE))
?sort
whitman.table <- table(unlist(lapply(whitman, strsplit, ""), use.names = FALSE))
whitman
whitman.table
a <- paste(1:5, 1:5, sep = "")
a <- paste(rep(1:5, 5), 1:5, sep = "")
a
c(11:15, 21:25, 31:35, 41:45, 51:55)
length(c(11:15, 21:25, 31:35, 41:45, 51:55))
lapply(whitman, strsplit, "")
unlist(lapply(whitman, strsplit, "")
unlist(lapply(whitman, strsplit, "")
table(unlist(lapply(whitman, strsplit, ""), use.names = FALSE))
getwd()
setwd("~/Git/Sneed-R")
?file
